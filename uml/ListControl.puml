@startuml
'https://plantuml.com/class-diagram

class ListAPP{
main()
start()
}

class ListController
{
+ ComboBox<String> listDropdown>;
+ TableView<Task> itemTable;
- TableColumn<Task, String> descriptionCol
- TableColumn<Task, LocalDate> dateCol
- TableColumn<Task, String> completed
- Button addButton;
- Button deleteButton;
- Button editButton;
- Button enter;
- Button addItemButton;
- Button deleteItemButton;
- Button exportList;
- Button importList;
- Button clearButton;
- Button helpButton;
- TextField listNameView;
- TextField descriptionBox;
- String description;
- DatePicker dueDate;
- CheckBox isCompleted;
+ FileChooser chooser;
+ Stage p;
+ ListManager manager
+ ManageFiles files;
- AnchorPane anchorPane;
+ DateTimeFormatter dateFormat;
// GUI: Event Handlers
+  initialize(URL url, ResourceBundle rb): void;
+  helpButtonClicked(ActionEvent event): void;
+  addItemClicked(ActionEvent event): void;
+  deleteItemClicked(ActionEvent event): void;
+  clearAllItemsClicked(ActionEvent event): void;
+  editDescription(): void;
+  editDueDate(): void;
+  editCompleted(): void;
+  listDropdownClicked(ActionEvent event): void;
+  importList(ActionEvent event): void;
+  exportListClicked(ActionEvent event): void
}

class ListManager
{
- String description;
- LocalDate dueDate;
- CheckBox isCompleted;
+ ObservableList<Task> list;
+ ObservableList<Task> completed;
+ ObservableList<Task> incomplete;
+ addItem();
+ deleteItem();
+ modifyItem();
+ editDescription();
+ editDueDate();
+ markComplete();
+ addAll();
+ ObservableList<Task> addCompleted();
+ ObservableList<Task> addIncomplete();


}
ListModel -- ListManager
ListManager*-- Task
ListController -- ManageFiles

class ManageFiles
{
+ importList(File, ListManager): String
+ exportList(Task): String

}
class Task{
    -description: SimpleStringProperty
    -dueDate: Date
    -isCompleted: Boolean

    +setDescription(String): void
    +setDueDate(String): void
    +getDescription(): String
    +getDueDate(): String
    +getIsCompleted(): Boolean
    +setIsCompleted()
    +toString(): String
}

@enduml
